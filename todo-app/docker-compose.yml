version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  # Auth Service (Spring Boot)
  auth-service:
    build:
      context: ./auth-service-spring
      dockerfile: Dockerfile
    container_name: todo-auth-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/todo_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: your-secret-key-change-this-in-production-min-256-bits
      JWT_EXPIRATION: 86400000
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network

  # Todo Service (Golang)
  todo-service:
    build:
      context: ./todo-service-go
      dockerfile: Dockerfile
    container_name: todo-todo-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: todo_db
      PORT: 8082
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network

  # API Gateway (Node.js)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: todo-api-gateway
    environment:
      PORT: 8080
      AUTH_SERVICE_URL: http://auth-service:8081
      TODO_SERVICE_URL: http://todo-service:8082
      CORS_ORIGIN: "*"
      NODE_ENV: production
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - todo-service
    networks:
      - todo-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  postgres_data:
